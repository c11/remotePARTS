% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GLS_functions.R
\name{crosspart_worker_R}
\alias{crosspart_worker_R}
\title{Worker function 2 for partitioned GLS}
\usage{
crosspart_worker_R(xxi, xxj, xxi0, xxj0, tUinv_i, tUinv_j, Vsub, df1, df2)
}
\arguments{
\item{xxi}{numeric matrix xx from  partition i}

\item{xxj}{numeric matrix xx from  partition j}

\item{xxi0}{numeric matrix xx0 from  partition i}

\item{xxj0}{numeric matrix xx0 from  partition j}

\item{tUinv_i}{numeric matrix tInvCholV from  partition i}

\item{tUinv_j}{numeric matrix tInvCholV from  partition j}

\item{Vsub}{numeric variance matrix for Xij (upper block)}

\item{df1}{first degree of freedom}

\item{df2}{second degree of freedom}
}
\description{
Worker function 2 for partitioned GLS
}
\details{
this is the second worker function for the partitioned GLS analysis.

NOTE: currently, there is no native parallel functionality and the partitioned
form of the GLS is not implemented entirely in C++. Instead, the R function
fitGLS.partition_rcpp() weaves between R and C++ on a single core. While
this method is still much faster than the purely R implementation, migration
to entirely C++ will greatly improve speed further. This migration requires
calculating geographic distances with C++ which I've not yet written.

Additionally, there seems to be a memory-related issue with the cpp version
of this code. I've
successfully used the function when partitions have 100 or fewer rows (too
small). However, larger partitions cause a fatal error that causes a crash.
}
\examples{
#TBA
}
