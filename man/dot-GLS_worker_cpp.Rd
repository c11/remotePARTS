% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{.GLS_worker_cpp}
\alias{.GLS_worker_cpp}
\title{Worker function 1 for paritioned GLS}
\usage{
.GLS_worker_cpp(
  y,
  X,
  V,
  X0,
  nug_l,
  nug_u,
  nug_tol,
  save_xx = FALSE,
  threads = 1L
)
}
\arguments{
\item{y}{numeric vector}

\item{X}{numeric matrix}

\item{V}{numeric matrix}

\item{X0}{numeric matrix}

\item{nug_l}{lower boundary for nugget optimization}

\item{nug_u}{upper boundary for nugget optimization}

\item{nug_tol}{tolerance of nugget optimization}

\item{save_xx}{logical: should xx, xx0, and invcholV be returned?}

\item{threads}{number of threads used by Eigen for matrix algebra}
}
\description{
Worker function 1 for paritioned GLS
}
\details{
this function is the first of 2 (maybe 3) worker functions that,
together, perform the partitioned GLS analysis.

This function is simply a wrapper for fitGLS_cpp() that finds the MLE nugget
and adds it to the output.

NOTE: eventually, the worker functions will perform the analysis using
multiple cores but that has not yet been implemented.
}
