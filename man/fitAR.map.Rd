% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AR_reml.R
\name{fitAR.map}
\alias{fitAR.map}
\title{Map AR REML}
\usage{
fitAR.map(
  X,
  t,
  Z = NULL,
  ret_int.coef = FALSE,
  ret_AR.par = TRUE,
  ret_MSE = TRUE,
  ret_resid = TRUE,
  ret_logLik = TRUE
)
}
\arguments{
\item{X}{nxp time series response matrix with p columns corresponding to time
points and n columns corresponding to the number of pixels}

\item{t}{p length temporal response vector}

\item{Z}{(currently not in use) - Z will be used to add covariates to the model.}

\item{ret_int.coef}{should the intercept coeffients be returned? logical}

\item{ret_AR.par}{should the AR parameter estimates be returned? logical}

\item{ret_MSE}{should the model MSEs be returned? logical}

\item{ret_resid}{should the model residuals be returned? logical}

\item{ret_logLik}{should the model log-likelihoods be returned? logical}
}
\value{
\code{remoteAR.map} object. A list with the following elements:
\describe{
    \item{\code{$call}}{matched function call}
    \item{\code{$time.coef}}{coefficient matrix for the temporal variable}
    \item{\code{$AR.par}}{an optional vector of the AR parameters}
    \item{\code{$MSE}}{an optional vector of model MSEs}
    \item{\code{$logLik}}{optional vector of log-likelihoods}
    \item{\code{$resids}}{optional nxp matrix of model residuals}
}
}
\description{
Fit AR REML models to a time series matrix
}
\details{
by default the print.remoteAR() method does not show all output.
to access individual components, use \code{names()} to see element names
and the S3 \code{$} operator to access them.
}
\examples{
t = 1:30; n.pix = 10
X = matrix(rnorm(length(t)*n.pix), ncol = length(t))
fitAR.map(X, t) # only $call and $time.coef are printed by print.remoteAR()
summary(fitAR.map(X, t))

coef(fitAR.map(X, t)) # data frame of time coefficeints (alternatively fitAR.map(X, t)$time.coef)
fitAR.map(X, t)$AR.par # AR parameters
fitAR.map(X, t)$MSE # model MSEs
fitAR.map(X, t)$logLik # model log-likelihoods
resid(fitAR.map(X, t)) # matrix of model residuals (alternatively fitAR.map(X, t)$resids)
}
