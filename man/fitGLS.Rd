% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitGLS.R
\name{fitGLS}
\alias{fitGLS}
\alias{fitGLS2}
\alias{LogLikGLS}
\alias{fitGLS_R}
\title{Fit GLS to remote sensing data}
\usage{
fitGLS(X, V, y, X0, nugget = 0, save_xx = FALSE, threads = 1)

fitGLS2(
  formula,
  data,
  V,
  nugget = 0,
  form.0 = NULL,
  save_xx = FALSE,
  threads = 1,
  contrasts = NULL,
  LL_only = FALSE,
  no_F = FALSE,
  ...
)

LogLikGLS(nugget, X, V, y)

fitGLS_R(X, V, y, X0 = NULL, nugget = 0)
}
\arguments{
\item{X}{model matrix (double)}

\item{V}{varcov matrix (double)}

\item{y}{response vector (double)}

\item{X0}{null model matrix (double)}

\item{nugget}{nugget added to V (double)}

\item{save_xx}{logical: should xx, xx0, and invcholV be returned? This
functionality is meant for use with the partitioned GLS whereby these
values are used to calculate cross-partition statistics.}

\item{threads}{integer indicating the number of threads to use. Currently
this parameter does nothin but multi-core functionality will be added soon.}

\item{formula}{formula to build the model with}

\item{data}{object containing the data}

\item{form.0}{null model formula (default: "y ~ 1")}

\item{contrasts}{optional linear contrasts to use}

\item{LL_only}{logical: should only the log-liklihood be computed?}

\item{no_F}{logical: should calculations needed for F tests be skipped?}

\item{...}{additional arguments passed to \code{\link{optimize_nugget}}}
}
\value{
remoteGLS object see \code{?remoteGLS()} for more info.
}
\description{
Fit GLS to remote sensing data

Alternative fitGLS function

Caculate log-liklihood of GLS model
}
\details{


\code{fitGLS2()} first creates an empty remoteGLS object
(with \code{remoteGLS()}) and then fills in the elements by modifying
the remoteGLS object in the C++ function.

After further testing to determine which function is most efficient,
either \code{fitGLS()} or \code{fitGLS2()} will be deprecated in favor
of the other. Though, the formula notation of \code{fitGLS2()} will likely
be kept in either case.

\code{fitGLS2()} uses a slightly different C++ function from \code{fitGLS()}
to achieve the different behavior.

\code{LogLikGLS()} returns only the log-likelihood and is used to
by other functions for optimization but should be deprecated and simply
added as functionality to \code{fitGLS()} and/or \code{fitGLS2()} in future
implementations.

\code{fitGLS()} is a C++ implementation of \code{fitGLS_R()}.
}
\examples{
## read data
data.file = system.file("extdata", "AK_ndvi_common-land.csv",
                        package = "remotePARTS")

df = data.table::fread(data.file, nrows = 1000) # read first 1000 rows

## format data
datalist = part_data(1, part_form = cls.coef ~ 0 + land, part_df = df,
          part_mat = matrix(1:1000, ncol = 1))

## fit covariance matrix
V = fitV(geosphere::distm(datalist$coords), spatialcor = 2, method = "exponential")

## run GLS
GLS = fitGLS(X = datalist$X, y = datalist$y, X0 = datalist$X0, V = V,
             nugget = 0, save_xx = TRUE)

print(GLS)


## Alternative GLS syntax
GLS2 = fitGLS2(formula = "cls.coef ~ 0 + land", data = df, V = V, form.0 = "cls.coef ~ 1",
             nugget = 0, save_xx = TRUE)

print(GLS2)
}
\seealso{
[remoteGLS()], [part_data()], [GLS_worker()]
}
